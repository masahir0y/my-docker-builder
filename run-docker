#!/bin/bash

set -e

build_only=

while [ $# -gt 0 ]
do
	case "$1" in
	-b | --build-only) build_only=1;;
	-d | --debug) set -x;;
	-* | --*) echo "$1: unknown option" >&2; exit 1;;
	*) break;;
	esac
	shift
done

default=ubuntu:18.04
mount_dirs="ref toolchains"

# The base image used for 'FROM'
# e.g. ubuntu:18.04, fedora:29, etc.
base=${1:-$default}

case $base in 
centos:*)
	base_dockerfile=Dockerfile-centos ;;
debian:*)
	base_dockerfile=Dockerfile-debian ;;
fedora:*)
	base_dockerfile=Dockerfile-fedora ;;
ubuntu:*)
	base_dockerfile=Dockerfile-ubuntu ;;
*)
	echo "$base: unsupported" >&2
	exit 1
	;;
esac

# the directory path where this script is located
this_dir=$(dirname $(realpath $0))

# Is there a better way to create a temporary directory in a safe manner?
tempdir=$(tempfile)
rm -f $tempdir
mkdir $tempdir

echo "FROM $base" > $tempdir/Dockerfile
cat $this_dir/$base_dockerfile >> $tempdir/Dockerfile

tag=my-docker-builder/$base

docker build -t $tag $tempdir

rm -rf $tmpdir

if [ "$build_only" = 1 ]; then
	echo "Building '$base' done"
	exit 0
fi

DOCKER_RUN_OPT=-it

for d in $mount_dirs
do
	# Mount useful directories if they exist in your home directory.
	# --volume=HOST_DIR:CONTAINER-DI
	if [ -d $HOME/$d ]; then
		DOCKER_RUN_OPT="$DOCKER_RUN_OPT --volume=$HOME/$d:/$d"
	fi
done

# This is needed for running 'strace' in a docker
DOCKER_RUN_OPT="$DOCKER_RUN_OPT --security-opt seccomp:unconfined"

docker run $DOCKER_RUN_OPT $tag /bin/bash
